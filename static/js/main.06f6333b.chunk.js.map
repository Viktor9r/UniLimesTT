{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","state","selectedFigure","figureSize","isFigureCreated","correctInput","figuresArray","createFigure","scene","camera","renderer","controls","geometry","figure","window","addEventListener","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","THREE","antialias","setPixelRatio","devicePixelRatio","position","setZ","document","body","appendChild","domElement","material","color","light","ambientLight","Array","fill","map","randFloatSpread","x","y","z","set","gridHelper","add","OrbitControls","init","animate","requestAnimationFrame","rotation","update","render","handleFigureChange","event","setState","target","value","push","toLowerCase","console","log","handleInputChange","includes","clearState","handleSubmit","preventDefault","onSubmit","this","name","className","onChange","required","type","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.06f6333b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nclass App extends Component {\n  state = {\n    selectedFigure: '',\n    // eslint-disable-next-line react/no-unused-state\n    figureSize: '',\n    // eslint-disable-next-line react/no-unused-state\n    isFigureCreated: false,\n    correctInput: true,\n    // eslint-disable-next-line react/no-unused-state\n    figuresArray: [],\n  };\n\n  createFigure = () => {\n    let scene;\n    let camera;\n    let renderer;\n    /* let box; */\n    let controls;\n    let geometry;\n    let figure;\n\n    const init = () => {\n      scene = new THREE.Scene();\n      camera = new\n      THREE.PerspectiveCamera(75, window.innerWidth\n        / window.innerHeight, 0.1, 1000);\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      // eslint-disable-next-line no-unused-vars\n      const figureType = this.state.selectedFigure;\n      // eslint-disable-next-line no-unused-vars\n      const figures = this.state.figuresArray;\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.position.setZ(30);\n      document.body.appendChild(renderer.domElement);\n      if (this.state.selectedFigure === 'Box') {\n        geometry = new THREE.BoxGeometry(1, 1, 1, 11);\n      } else if (this.state.selectedFigure === 'Sphere') {\n        geometry = new THREE.SphereGeometry(15, 32, 16);\n      } else if (this.state.selectedFigure === 'Circle') {\n        geometry = new THREE.CircleGeometry(5, 32);\n      }\n\n      const material\n      = new THREE.MeshBasicMaterial({\n        color: 0xFF6347,\n      });\n\n      figure = new THREE.Mesh(geometry, material);\n\n      /* const geometryS = new THREE.SphereGeometry(2, 3, 1);\n      const materialS = new THREE.MeshBasicMaterial({ color: 0x00eeee });\n      const sphere = new THREE.Mesh(geometryS, materialS); */\n\n      const light = new THREE.PointLight(0xffffff);\n      const ambientLight = new THREE.AmbientLight(0xffffff);\n      const [x, y, z]\n        = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread(10));\n\n      figure.position.set(x, y, z);\n\n      light.position.set(20, 20, 20);\n      const gridHelper = new THREE.GridHelper(200, 50);\n\n      scene.add(light, ambientLight, gridHelper);\n\n      scene.add(figure);\n      /* box.position\n        .set(Math.random()\n        * 2 + 1, Math.random() * 2 + 1, Math.random() * 2 + 1); */\n      /*  sphere.position\n        .set(Math.random()\n        * 4 + 1, Math.random() * 4 + 1, Math.random() * 4 + 1); */\n      camera.position.z = 5;\n\n      controls = new OrbitControls(camera, renderer.domElement);\n    };\n\n    function animate() {\n      requestAnimationFrame(animate);\n      figure.rotation.x += 0.01;\n      figure.rotation.y += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    }\n\n    function windowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    window.addEventListener('resize', windowResize, false);\n\n    init();\n    animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n\n  handleFigureChange = (event) => {\n    this.setState({\n      selectedFigure: event.target.value,\n    });\n    this.state.figuresArray.push(event.target.value.toLowerCase());\n    // eslint-disable-next-line no-console\n    console.log(this.state.figuresArray);\n  }\n\n  handleInputChange = (event) => {\n    const correctValues = '1234567890';\n\n    if (correctValues.includes(event.target.value)) {\n      this.setState({\n        figureSize: event.target.value[1],\n        correctInput: true,\n      });\n    } else {\n      this.setState({\n        correctInput: false,\n      });\n    }\n  }\n\n  clearState = () => {\n    this.setState({\n      selectedFigure: '',\n      figureSize: '',\n      correctInput: true,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.correctInput) {\n      this.createFigure();\n      this.clearState();\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('inc');\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <select\n            value={this.state.selectedFigure}\n            name=\"Figure\"\n            className=\"figure-selector\"\n            onChange={this.handleFigureChange}\n            required\n          >\n            <option value=\"\">Choose a figure</option>\n            <option value=\"Box\">Box</option>\n            <option value=\"Sphere\">Sphere</option>\n            <option value=\"Circle\">Circle</option>\n          </select>\n          <input\n            name=\"Scale\"\n            className=\"figure-size\"\n            required\n            onChange={this.handleInputChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"submitForm\"\n          >\n            Create\n          </button>\n          <div>{this.state.selectedFigure}</div>\n          <div>{this.state.figureSize}</div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}